enum SUPPORTED_READINGS {
  NHK_NEWS_WEB_EASY
  USER_CREATED
}

enum SUPPORTED_LANGUAGE_CODE {
  JA
}

type Account {
  email: String! @unique
  firstName: String!
  lastName: String!
  teacher: Teacher
  student: Student
}

type Question {
  question: String!
  answer: String! # has a "correct" answer determined by the teacher
  associated_reading: Reading!
  student_answers: [StudentAnswer]! # a question can be answered by many students
}

type StudentAnswer {
  answered_by: Student # answered by a student or unauthenticated user
  answer: String
  question: Question!
}

type Vocabulary {
  word: String! @unique
  definition: String
  appears_in: [Reading]! @relation(name: "discussion_vocab") #this could get big quick
}

type ReadingSession {
  reading: Reading!
  teacher: Teacher!
  student: Student # may or may not have a student assigned, think links sent to students
}

# Readings can either be user generated or scrapped from a website.
type Reading {
  discussion_questions: [Question]! @relation(name: "discussion_questions")
  vocabulary: [Vocabulary]! @relation(name: "discussion_vocab")
  reading_type: SUPPORTED_READINGS!
  reading_url: String
  text: String!
  title: String!
  created_by: Teacher
}

type Teacher {
  account: Account! @relation(name: "teacher_account")
  students: [Student] @relation(name: "assigned_to")
  reading_sessions: [ReadingSession]
  teaches_languages: [Language]! @relation
}

type Student {
  account: Account! @relation(name: "student_account")
  reading_sessions: [ReadingSession]
  @relation(name: "student_readings_sessions")
  teachers: [Teacher] @relation(name: "assigned_to")
  studies_languages: [Language]! @relation
}

type Language {
  code: SUPPORTED_LANGUAGE_CODE! @unique
  display_string: String!
  language_string: String!
  students: [Student]! @relation
  teachers: [Teacher]! @relation
}

type Query {
  getLoggedInUser: Account! @resolver
  getAllLanguages: [Language]! @resolver
}

type Mutation {
  register(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): Account! @resolver
  login(email: String!, password: String!): String! @resolver
}

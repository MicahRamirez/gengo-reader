enum SUPPORTED_READINGS {
  NHK_NEWS_WEB_EASY
}

enum SUPPORTED_LANGUAGE_CODE {
  JA
}

type Account {
  email: String! @unique
  firstName: String!
  lastName: String!
}

type Question {
  question: String!
  answer: String!
  discussion_questions: [Reading]! @relation(name: "discussion_questions")
}

type Vocabulary {
  word: String!
  definition: String
  discussion_questions: [Reading]! @relation(name: "discussion_vocab")
}

type Reading {
  discussion_questions: [Question]! @relation(name: "discussion_questions")
  vocab: [Vocabulary]! @relation(name: "discussion_vocab")
  reading_type: SUPPORTED_READINGS!
  reading_url: String!
  text: String!
  title: String!
  teachers: [Teacher]! @relation(name: "teacher_assignments")
  students: [Student]! @relation(name: "student_readings")
  # tokens: TokenMap TODO Tokenize the scraped article
}

type Teacher {
  account: Account! @relation
  students: [Student]! @relation(name: "assigned_to")
  readings: [Reading]! @relation(name: "teacher_assignments")
  teaches_languages: [Language]! @relation
}

type Student {
  account: Account! @relation
  readings: [Reading]! @relation(name: "student_readings")
  teachers: [Teacher]! @relation(name: "assigned_to")
  studies_languages: [Language]! @relation
}

type Language {
  code: SUPPORTED_LANGUAGE_CODE!
  display_string: String!
  students: [Student]! @relation
  teachers: [Teacher]! @relation
}

type Mutation {
  register(
    email: String!
    password: String!
    firstName: String!
    lastName: String!
  ): Account! @resolver
  login(email: String!, password: String!): String! @resolver
}

type Query {
  getLoggedInUser(): Account! @resolver
}